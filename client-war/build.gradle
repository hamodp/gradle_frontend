buildscript {
    repositories {
        
        mavenCentral()
    }
}

apply plugin: 'war'
apply plugin: 'java'
apply plugin: 'eclipse-wtp'
apply from: 'https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin'

repositories {
   // jcenter()
    mavenCentral()
    maven{ url "https://repository.jboss.org/nexus/content/repositories/thirdparty-releases/" }
}

dependencies {
    //compile group: 'commons-io', name: 'commons-io', version: '1.4'
    //compile group: 'log4j', name: 'log4j', version: '1.2.15', ext: 'jar'
    //providedCompile 'javax.servlet:servlet-api:2.5
    
    // creates the ejb container with glassfish server
   // compile "org.glassfish.extras:glassfish-embedded-all:3.1.1"
   
   // create the ejb container with jboss server
  // compile "org.jboss.ejb3.embedded:jboss-ejb3-embedded-standalone:
   // https://mvnrepository.com/artifact/org.jboss.ejb3.embedded/jboss-ejb3-embedded-api
//compile group: 'org.jboss.ejb3.embedded', name: 'jboss-ejb3-embedded-api', version: '1.0.0-alpha-4'
   
   
   //compile "org.jboss.ejb3:jboss-ejb3-api:3.1.0"
    
    // provides java ee api
    compile group: 'javax', name: 'javaee-api', version: '8.0'
    
    // provides junit 5 jupiter
    // https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
	compile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.2.0'
	
	// https://mvnrepository.com/artifact/org.junit.platform/junit-platform-launcher
	compile group: 'org.junit.platform', name: 'junit-platform-launcher', version: '1.2.0'
	
	// https://mvnrepository.com/artifact/org.junit.platform/junit-platform-runner
compile group: 'org.junit.platform', name: 'junit-platform-runner', version: '1.2.0'

// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-params
compile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.2.0'


    
}

task taskX(type: Exec, dependsOn: 'build') {

		commandLine 'sh','./deploy.sh'
}

gretty {
   httpPort = 8080
}

//for test vlcj
//jar {
//    from{ configurations.compile.collect{ it.isDirectory() ? it : zipTree(it) } }
//    manifest {
//        attributes 'Main-Class': 'org.gradle.sample.StreamHttp'
//    }
//}